2024/7/14
 江协更新了芜湖，先看看
讲的是STM32 的CAN外设，而之前的5集是CAN协议
总线底层工作（之前五集学的）基本都是CAN外设包揽了，不用操心，程序上只用处理报文数据而不用关注总线的电平细节
外设资源：3个可配置优先级的发送邮箱（可以存三个报文），2个三级深度的接收FIFO（可以存6个报文），14个过滤器组，可支持高速CAN
实际上操作CAN外设的时候，我们只用在程序上操作ID,DLC,DATA之类我们自己决定的东西，像帧间隔之类固定格式的外设可以包揽
发送邮箱也有两种处理方式（当不止一个数据在邮箱里要发送时）一种是处理最先来的，另一种是先处理ID小的
FIFO（first in first out）配置有锁定和不锁定，锁定的时候新数据丢失，不锁定的时候新的数据代替最后一个数据
发送和FIFO都是排队，是在数据写入频率大于数据处理频率的时候提供一个缓冲区域
轮询和中断读数据？
发送流程：选择一个空置邮箱，写入报文（ID,IDE,RTR,DLC,DATA），请求发送
RQCP（请求完成）,TXOK（发送成功）,TME（邮箱空置），默认为XX1
TXRQ传输申请后邮箱进入挂号状态，当是最高优先级的时候进入预定状态，只要CAN总线=IDLE空闲即进入发送状态持续一段时间
如果成功发送则回归空置，111；
假如NART=0，表示自动重传启用，则回归预定状态一直发送，直到发送成功为止
NART=1禁止自动重传，回到空置状态101
挂号或者预定的时候，如果让ABRQ=1那么直接回归101空置
接收流程：接收倒一个报文，匹配过滤器后进入FIFO 0或者FIFO 1，CPU读取
FMP（报文数目）（0x00?）,FOVR（报文溢出）（0）
接收到有效报文0x00->0x01->0x10->0x11（？）
接收到三位以后FULL=1，再接收就溢出了FOVR=1,FMP不变
读取之后可以设置RFOM（释放邮箱）为1释放邮箱回退状态一直到空状态
